(ns clj-watson.controller.vulnerability
  (:require [clojure.string :as string]
            [version-clj.core :as version]
            [clj-watson.diplomat.github :as diplomat.github]))

(def ^:private operators
  {">"  version/newer?
   ">=" version/newer-or-equal?
   "<"  version/older?
   "<=" version/older-or-equal?})

(defn ^:private is-vulnerable? [version {:keys [vulnerableVersionRange]}]
  (let [validate-fn (->> (string/split vulnerableVersionRange #",")
                         (map string/trim)
                         (map #(string/split % #"\s"))
                         (map (fn [[op version]]
                                #((get operators op) % version)))
                         (apply juxt))]
    (every? true? (validate-fn version))))

(defn ^:private scan-dependency [{:keys [dependency mvn/version] :as dependency-info}]
  (let [all-package-vulnerabilities (diplomat.github/vulnerabilities-by-package dependency)
        filtered-vulnerabilities (filterv (partial is-vulnerable? version) all-package-vulnerabilities)]
    (if (seq filtered-vulnerabilities)
      (assoc dependency-info :vulnerabilities filtered-vulnerabilities)
      dependency-info)))

(defn scan-dependencies [dependencies]
  (->> dependencies (pmap scan-dependency) (filterv :vulnerabilities)))

(comment
  (scan-dependencies [{:dependency  'org.postgresql/postgresql
                       :mvn/version "42.2.10"}]))