(ns clj-watson.controller.vulnerability
  (:require [clj-watson.logic.vulnerability :as logic.vulnerability]
            [clj-watson.diplomat.dependency :as diplomat.dependency]
            [clj-watson.diplomat.github :as diplomat.github]))

(def ^:private dependency-rename
  {'org.jdom/jdom2 'org.jdom/jdom})

(defn ^:private latest-dependency-version [dependency all-dependency-vulnerabilities repositories]
  (let [latest-version (last (diplomat.dependency/get-all-versions! dependency repositories))
        vulnerabilities (filterv #(logic.vulnerability/is-version-vulnerable? latest-version %) all-dependency-vulnerabilities)]
    (when (not (seq vulnerabilities))
      latest-version)))

(defn ^:private scan-dependency [{:keys [dependency mvn/version] :as dependency-info} repositories]
  (let [dependency-name-for-github (or (get dependency-rename dependency) dependency)
        all-dependency-vulnerabilities  (diplomat.github/vulnerabilities-by-package dependency-name-for-github)
        filtered-vulnerabilities (filterv #(logic.vulnerability/is-version-vulnerable? version %) all-dependency-vulnerabilities)
        latest-secure-version (or (logic.vulnerability/version-not-vulnerable all-dependency-vulnerabilities)
                                  (latest-dependency-version dependency all-dependency-vulnerabilities repositories))]
    (if (seq filtered-vulnerabilities)
      (assoc dependency-info :vulnerabilities filtered-vulnerabilities :secure-version latest-secure-version)
      dependency-info)))

(defn scan-dependencies [dependencies repositories]
  (->> dependencies
       (pmap #(scan-dependency % repositories))
       (filterv :vulnerabilities)))

(comment
  (def repositories {:mvn/repos {"central" {:url "https://repo1.maven.org/maven2/"}
                                 "clojars" {:url "https://repo.clojars.org/"}}})

  (scan-dependencies [{:dependency  'org.jdom/jdom2 :mvn/version "2.0.6"}] repositories)

  (scan-dependencies [{:dependency  'org.postgresql/postgresql :mvn/version "42.2.10"}] repositories))